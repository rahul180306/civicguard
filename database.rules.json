{
  "rules": {
    ".read": false,
    ".write": false,

    "users": {
      "$uid": {
        ".read": "auth != null && auth.uid == $uid",
        ".write": "auth != null && auth.uid == $uid",
        "role": {
          ".validate": "(data.exists() && newData.val() == data.val()) || (root.child('users').child(auth.uid).child('role').val() == 'admin' && (newData.val() == 'admin' || newData.val() == 'user'))"
        }
      }
    },

    "tickets": {
      ".read": "auth != null && (root.child('users').child(auth.uid).child('role').val() == 'admin' || (query.orderByChild == 'owner_uid' && query.equalTo == auth.uid))",
      ".indexOn": ["owner_uid", "status", "iclass"],

  "$ticketId": {
        ".read": "auth != null && (data.child('owner_uid').val() == auth.uid || root.child('users').child(auth.uid).child('role').val() == 'admin')",
        ".write": "auth != null && ((!data.exists() && newData.child('owner_uid').val() == auth.uid) || (data.exists() && (data.child('owner_uid').val() == auth.uid || root.child('users').child(auth.uid).child('role').val() == 'admin')))",

        ".validate": "newData.hasChildren(['owner_uid','iclass','status'])",

        "owner_uid": {
          ".validate": "newData.isString() && (!data.exists() ? newData.val() == auth.uid : newData.val() == data.val())"
        },
        "iclass": {
          ".validate": "newData.isString() && (newData.val() == 'pothole' || newData.val() == 'garbage' || newData.val() == 'streetlight' || newData.val() == 'water_leak' || newData.val() == 'illegal_parking' || newData.val() == 'stray_animals' || newData.val() == 'unknown')"
        },
        "status": {
          ".validate": "newData.isString() && ((newData.val() == 'CREATED' && (!data.exists() || data.val() == 'CREATED')) || (root.child('users').child(auth.uid).child('role').val() == 'admin' && (newData.val() == 'FILING' || newData.val() == 'FILED' || newData.val() == 'RESOLVED' || newData.val() == 'FAILED')))"
        },
        "contact": { ".validate": "newData.val() == null || newData.isString()" },
        "lat":     { ".validate": "newData.val() == null || (newData.isNumber() && newData.val() >= -90 && newData.val() <= 90)" },
        "lng":     { ".validate": "newData.val() == null || (newData.isNumber() && newData.val() >= -180 && newData.val() <= 180)" },
        "address": { ".validate": "newData.val() == null || newData.isString()" },
  "file_url":{ ".validate": "newData.val() == null || newData.isString()" },

        "authority": {
          ".validate": "root.child('users').child(auth.uid).child('role').val() == 'admin' || (!data.exists() && newData.val() == null) || (data.exists() && newData.val() == data.val())"
        },
        "authority_ticket_id": {
          ".validate": "root.child('users').child(auth.uid).child('role').val() == 'admin' || (!data.exists() && newData.val() == null) || (data.exists() && newData.val() == data.val())"
        },

        "$other": { ".validate": false }
      }
    }
  }
}
